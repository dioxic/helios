[versions]
arrow = "1.2.0-RC"
assertj = "3.22.0"
assertk = "0.26.1"
atomicfu = "0.17.1"
axionPlugin = "1.13.6"
clikt = "3.5.4"
commonsCodec = "1.15"
commonsMath = "3.6.1"
dokka = "1.8.20"
faker = "1.14.0"
junit = "5.9.3"
kotest = "5.6.2"
kotestArrowAssertions = "1.3.3"
kotlin = "1.8.22"
kotlinCoroutines = "1.7.2"
kotlinDatetime = "0.4.0"
kotlinPoet = "1.13.2"
kotlinSerialization = "1.5.1"
kotlinBsonSerialization = "1.0-SNAPSHOT"
ksp = "1.8.22-1.0.11"
log4j = "2.20.0"
mockk = "1.13.5"
mongodb = "4.10.1"
reflections = "0.10.2"
slf4j = "2.0.7"
statistics = "1.2.1"
versionsPlugin = "0.42.0"

[libraries]
arrow-atomic = { module = "io.arrow-kt:arrow-atomic", version.ref = "arrow" }
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
arrow-fx-coroutines = { module = "io.arrow-kt:arrow-fx-coroutines", version.ref = "arrow" }
arrow-fx-stm = { module = "io.arrow-kt:arrow-fx-stm", version.ref = "arrow" }
arrow-optics = { module = "io.arrow-kt:arrow-optics", version.ref = "arrow" }
arrow-optics-ksp-plugin = { module = "io.arrow-kt:arrow-optics-ksp-plugin", version.ref = "arrow" }
arrow-resilience = { module = "io.arrow-kt:arrow-resilience", version.ref = "arrow" }
arrow-test = { module = "io.arrow-kt:arrow-test", version.ref = "arrow" }
assertj = { module = "org.assertj:assertj-core", version.ref = "assertj" }
assertk = { module = "com.willowtreeapps.assertk:assertk-jvm", version.ref = "assertk" }
atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "atomicfu" }
bson = { module = "org.mongodb:bson", version.ref = "mongodb" }
clikt = { module = "com.github.ajalt.clikt:clikt", version.ref = "clikt" }
commons-codec = { module = "commons-codec:commons-codec", version.ref = "commonsCodec" }
commons-math = { module = "org.apache.commons:commons-math3", version.ref = "commonsMath" }
faker = { module = "io.github.serpro69:kotlin-faker", version.ref = "faker" }
junit = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
kotest-assertions = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-datatest = { module = "io.kotest:kotest-framework-datatest", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-property-arbs = { module = "io.kotest.extensions:kotest-property-arbs", version = "2.1.2" }
kotest-runner = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-arrow-assertions = { module = "io.kotest.extensions:kotest-assertions-arrow", version.ref = "kotestArrowAssertions" }
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinCoroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinCoroutines" }
kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinDatetime" }
kotlin-poet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinPoet" }
kotlin-poetKsp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "kotlinPoet" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-serialization-bson = { module = "uk.dioxic.kotlinx:kotlinx-serialization-bson", version.ref = "kotlinBsonSerialization" }
kotlin-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinSerialization" }
kotlin-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinSerialization" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
ksp = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
log4j-api = { module = "org.apache.logging.log4j:log4j-api", version.ref = "log4j" }
log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
log4j-kotlin = { module = "org.apache.logging.log4j:log4j-api-kotlin", version = "1.2.0" }
log4j-slf4j = { module = "org.apache.logging.log4j:log4j-slf4j2-impl", version.ref = "log4j" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
#mongodb-async = { module = "org.mongodb:mongodb-driver-kotlin-coroutine", version.ref = "mongodb" }
mongodb-sync = { module = "org.mongodb:mongodb-driver-sync", version.ref = "mongodb" }
reflections = { module = "org.reflections:reflections", version.ref = "reflections" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-core = { module = "org.slf4j:slf4j-core", version.ref = "slf4j" }
statistics = { module = "org.nield:kotlin-statistics", version.ref = "statistics" }
#gradle-versions = { module = "com.github.ben-manes:gradle-versions-plugin", version.ref = "versionsPlugin" }
#gradle-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }

[bundles]
logging = ["log4j-core", "log4j-api", "log4j-slf4j", "log4j-kotlin"]
kotest = ["kotest-runner", "kotest-assertions", "kotest-property", "kotest-datatest", "kotest-property-arbs"]

[plugins]
atomicfu = { id = "org.jetbrains.kotlin.plugin.atomicfu", version.ref = "kotlin" }
axion = { id = "pl.allegro.tech.build.axion-release", version.ref = "axionPlugin" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
kotlin-js = { id = "org.jetbrains.kotlin.js", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
versions = { id = "com.github.ben-manes.versions", version.ref = "versionsPlugin" }